Duration = c(1, 1, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1)     # Durations
)
# Define relationships
arrows <- data.frame(
From = c("20-inch Fan", "20-inch Fan", "20-inch Fan", "20-inch Fan",
"Housing", "Housing", "Housing",
"Fan Assembly", "Fan Assembly",
"Electrical Unit", "Electrical Unit", "Electrical Unit"),
To = c("Housing", "Grills", "Fan Assembly", "Electrical Unit",
"Frame", "Supports", "Handle",
"Hub", "Blades",
"Motor", "Switch", "Knob")
)
library(ggplot2)
library(ggforce)
# Data for the product structure
time_phased <- data.frame(
Component = c("20-inch Fan", "Housing", "Frame", "Supports", "Handle", "Grills",
"Fan Assembly", "Hub", "Blades", "Electrical Unit", "Motor", "Switch", "Knob"),
Parent = c(NA, "20-inch Fan", "Housing", "Housing", "Housing", "Housing",
"20-inch Fan", "Fan Assembly", "Fan Assembly", "Electrical Unit",
"Electrical Unit", "Electrical Unit", NA)  # Each component's parent
)
# Define relationships (from component to sub-component)
arrows <- data.frame(
From = c("20-inch Fan", "20-inch Fan", "20-inch Fan", "20-inch Fan",
"Housing", "Housing", "Housing",
"Fan Assembly", "Fan Assembly",
"Electrical Unit", "Electrical Unit", "Electrical Unit"),
To = c("Housing", "Grills", "Fan Assembly", "Electrical Unit",
"Frame", "Supports", "Handle",
"Hub", "Blades",
"Motor", "Switch", "Knob")
)
# Prepare ggplot
ggplot(time_phased, aes(x = 1, y = reorder(Component, Component))) +
# Draw lines for components (to make them more visible)
geom_point(aes(x = 1, y = reorder(Component, Component)), size = 4, color = "blue") +
# Draw arrows for dependencies
geom_curve(data = arrows, aes(x = 1, xend = 1.2, y = From, yend = To),
curvature = -0.3, color = "black", arrow = arrow(length = unit(0.2, "cm"))) +
# Labels and styles
labs(title = "Hierarchical Product Structure", x = "", y = "Components") +
theme_minimal(base_size = 14) +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title.x = element_blank())
library(ggplot2)
library(ggforce)
library(dplyr)
# Data for the product structure
time_phased <- data.frame(
Component = c("20-inch Fan", "Housing", "Frame", "Supports", "Handle", "Grills",
"Fan Assembly", "Hub", "Blades", "Electrical Unit", "Motor", "Switch", "Knob"),
Parent = c(NA, "20-inch Fan", "Housing", "Housing", "Housing", "Housing",
"20-inch Fan", "Fan Assembly", "Fan Assembly", "Electrical Unit",
"Electrical Unit", "Electrical Unit", NA)  # Parent component for hierarchy
)
# Function to calculate the level (depth) of each component in the hierarchy
get_level <- function(component, parent_df) {
level <- 0
while (!is.na(component)) {
component <- parent_df$Parent[parent_df$Component == component]
level <- level + 1
}
return(level)
}
# Apply the function to get levels for each component
time_phased$Level <- sapply(time_phased$Component, get_level, parent_df = time_phased)
library(ggplot2)
library(ggforce)
library(dplyr)
# Data for the product structure
time_phased <- data.frame(
Component = c("20-inch Fan", "Housing", "Frame", "Supports", "Handle", "Grills",
"Fan Assembly", "Hub", "Blades", "Electrical Unit", "Motor", "Switch", "Knob"),
Parent = c(NA, "20-inch Fan", "Housing", "Housing", "Housing", "Housing",
"20-inch Fan", "Fan Assembly", "Fan Assembly", "Electrical Unit",
"Electrical Unit", "Electrical Unit", NA)  # Parent component for hierarchy
)
# Function to calculate the level (depth) of each component in the hierarchy
get_level <- function(component, parent_df) {
level <- 0
while (!is.na(component)) {
component <- parent_df$Parent[parent_df$Component == component]
level <- level + 1
}
return(level)
}
# Apply the function to get levels for each component
time_phased$Level <- sapply(time_phased$Component, get_level, parent_df = time_phased)
library(ggplot2)
library(ggforce)
# Data for the product structure
time_phased <- data.frame(
Component = c("20-inch Fan", "Housing", "Frame", "Supports", "Handle", "Grills",
"Fan Assembly", "Hub", "Blades", "Electrical Unit", "Motor", "Switch", "Knob"),
Week_Start = c(7, 6, 4, 5, 5, 5, 4, 3, 3, 6, 5, 5, 5),  # Start weeks
Duration = c(1, 1, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1)     # Durations
)
# Define relationships
arrows <- data.frame(
From = c("20-inch Fan", "20-inch Fan", "20-inch Fan", "20-inch Fan",
"Housing", "Housing", "Housing",
"Fan Assembly", "Fan Assembly",
"Electrical Unit", "Electrical Unit", "Electrical Unit"),
To = c("Housing", "Grills", "Fan Assembly", "Electrical Unit",
"Frame", "Supports", "Handle",
"Hub", "Blades",
"Motor", "Switch", "Knob")
)
# Prepare ggplot
ggplot(time_phased, aes(y = reorder(Component, Week_Start), x = Week_Start)) +
# Draw horizontal bars for durations
geom_segment(aes(xend = Week_Start + Duration, yend = reorder(Component, Week_Start)),
color = "blue", size = 1.5, arrow = arrow(length = unit(0.2, "cm"))) +
# Draw arrows for dependencies
geom_curve(data = arrows, aes(x = time_phased$Week_Start[match(From, time_phased$Component)],
xend = time_phased$Week_Start[match(To, time_phased$Component)],
y = From, yend = To),
curvature = -0.2, color = "black", arrow = arrow(length = unit(0.2, "cm"))) +
# Labels and styles
labs(title = "Time-Phased Product Structure", x = "Time (Weeks)", y = "Components") +
theme_minimal(base_size = 14)
library(ggplot2)
library(ggforce)
# Data for the product structure
time_phased <- data.frame(
Component = c("20-inch Fan", "Housing", "Frame", "Supports", "Handle", "Grills",
"Fan Assembly", "Hub", "Blades", "Electrical Unit", "Motor", "Switch", "Knob"),
Week_Start = c(7, 6, 4, 5, 5, 5, 4, 3, 3, 6, 5, 5, 5),  # Start weeks
Duration = c(1, 1, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1)     # Durations
)
# Define relationships
arrows <- data.frame(
From = c("20-inch Fan", "20-inch Fan", "20-inch Fan", "20-inch Fan",
"Housing", "Housing", "Housing",
"Fan Assembly", "Fan Assembly",
"Electrical Unit", "Electrical Unit", "Electrical Unit"),
To = c("Housing", "Grills", "Fan Assembly", "Electrical Unit",
"Frame", "Supports", "Handle",
"Hub", "Blades",
"Motor", "Switch", "Knob")
)
# Create nodes for the hierarchical structure
nodes <- data.frame(
name = unique(c(arrows$From, arrows$To))
)
# Create edges for the hierarchical structure
edges <- data.frame(
from = match(arrows$From, nodes$name),
to = match(arrows$To, nodes$name)
)
# Plot hierarchical structure using ggforce
ggplot() +
geom_node_point(aes(x, y), data = ggforce::layout_as_tree(nodes, edges), size = 5, color = "blue") +
geom_edge_link(aes(x, y, xend = xend, yend = yend), data = ggforce::layout_as_tree(edges),
arrow = arrow(length = unit(0.2, "cm")), end_cap = circle(3, "mm")) +
geom_text(aes(x, y, label = name), data = ggforce::layout_as_tree(nodes, edges),
hjust = 1, vjust = 1) +
labs(title = "Hierarchical Product Structure", x = "", y = "") +
theme_void(base_size = 14)
library(ggplot2)
library(ggforce)
# Data for the product structure
time_phased <- data.frame(
Component = c("20-inch Fan", "Housing", "Frame", "Supports", "Handle", "Grills",
"Fan Assembly", "Hub", "Blades", "Electrical Unit", "Motor", "Switch", "Knob"),
Week_Start = c(7, 6, 4, 5, 5, 5, 4, 3, 3, 6, 5, 5, 5),  # Start weeks
Duration = c(1, 1, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1)     # Durations
)
# Define relationships
arrows <- data.frame(
From = c("20-inch Fan", "20-inch Fan", "20-inch Fan", "20-inch Fan",
"Housing", "Housing", "Housing",
"Fan Assembly", "Fan Assembly",
"Electrical Unit", "Electrical Unit", "Electrical Unit"),
To = c("Housing", "Grills", "Fan Assembly", "Electrical Unit",
"Frame", "Supports", "Handle",
"Hub", "Blades",
"Motor", "Switch", "Knob")
)
# Create nodes for the hierarchical structure
nodes <- data.frame(
name = unique(c(arrows$From, arrows$To))
)
# Create edges for the hierarchical structure
edges <- data.frame(
from = match(arrows$From, nodes$name),
to = match(arrows$To, nodes$name)
)
# Generate the tree layout
tree_layout <- ggforce::layout_as_tree(nodes, edges)
install.packages("ggforce")
library(ggplot2)
library(ggforce)
# Data for the product structure
time_phased <- data.frame(
Component = c("20-inch Fan", "Housing", "Frame", "Supports", "Handle", "Grills",
"Fan Assembly", "Hub", "Blades", "Electrical Unit", "Motor", "Switch", "Knob"),
Week_Start = c(7, 6, 4, 5, 5, 5, 4, 3, 3, 6, 5, 5, 5),  # Start weeks
Duration = c(1, 1, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1)     # Durations
)
# Define relationships
arrows <- data.frame(
From = c("20-inch Fan", "20-inch Fan", "20-inch Fan", "20-inch Fan",
"Housing", "Housing", "Housing",
"Fan Assembly", "Fan Assembly",
"Electrical Unit", "Electrical Unit", "Electrical Unit"),
To = c("Housing", "Grills", "Fan Assembly", "Electrical Unit",
"Frame", "Supports", "Handle",
"Hub", "Blades",
"Motor", "Switch", "Knob")
)
# Create nodes for the hierarchical structure
nodes <- data.frame(
name = unique(c(arrows$From, arrows$To))
)
# Create edges for the hierarchical structure
edges <- data.frame(
from = match(arrows$From, nodes$name),
to = match(arrows$To, nodes$name)
)
# Generate the tree layout
tree_layout <- ggforce::layout_as_tree(nodes, edges)
library(ggplot2)
library(ggforce)
library(ggraph)
install.packages("ggraph")
library(ggplot2)
library(ggforce)
library(ggraph)
library(igraph)
# Data for the product structure
time_phased <- data.frame(
Component = c("20-inch Fan", "Housing", "Frame", "Supports", "Handle", "Grills",
"Fan Assembly", "Hub", "Blades", "Electrical Unit", "Motor", "Switch", "Knob"),
Week_Start = c(7, 6, 4, 5, 5, 5, 4, 3, 3, 6, 5, 5, 5),  # Start weeks
Duration = c(1, 1, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1)     # Durations
)
# Define relationships
arrows <- data.frame(
From = c("20-inch Fan", "20-inch Fan", "20-inch Fan", "20-inch Fan",
"Housing", "Housing", "Housing",
"Fan Assembly", "Fan Assembly",
"Electrical Unit", "Electrical Unit", "Electrical Unit"),
To = c("Housing", "Grills", "Fan Assembly", "Electrical Unit",
"Frame", "Supports", "Handle",
"Hub", "Blades",
"Motor", "Switch", "Knob")
)
# Create a graph object
graph <- graph_from_data_frame(arrows, directed = TRUE, vertices = time_phased)
# Plot using ggraph
ggraph(graph, layout = 'dendrogram', circular = FALSE) +
geom_edge_link(aes(color = "black"), arrow = arrow(length = unit(0.2, "cm"))) +
geom_node_point(aes(color = "blue"), size = 3) +
geom_node_text(aes(label = name), vjust = 1.5, hjust = 1.5) +
theme_void() +
labs(title = "Hierarchical Product Structure") +
theme(legend.position = "none")
library(ggplot2)
library(ggforce)
# Data for the product structure
time_phased <- data.frame(
Component = c("20-inch Fan", "Housing", "Frame", "Supports", "Handle", "Grills",
"Fan Assembly", "Hub", "Blades", "Electrical Unit", "Motor", "Switch", "Knob"),
Week_Start = c(7, 6, 4, 5, 5, 5, 4, 3, 3, 6, 5, 5, 5),  # Start weeks
Duration = c(1, 1, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1)     # Durations
)
# Define relationships
arrows <- data.frame(
From = c("20-inch Fan", "20-inch Fan", "20-inch Fan", "20-inch Fan",
"Housing", "Housing", "Housing",
"Fan Assembly", "Fan Assembly",
"Electrical Unit", "Electrical Unit", "Electrical Unit"),
To = c("Housing", "Grills", "Fan Assembly", "Electrical Unit",
"Frame", "Supports", "Handle",
"Hub", "Blades",
"Motor", "Switch", "Knob")
)
# Create a hierarchical layout manually
hierarchy <- data.frame(
Component = c("20-inch Fan", "Housing", "Frame", "Supports", "Handle", "Grills",
"Fan Assembly", "Hub", "Blades", "Electrical Unit", "Motor", "Switch", "Knob"),
Parent = c(NA, "20-inch Fan", "Housing", "Housing", "Housing", "20-inch Fan",
"20-inch Fan", "Fan Assembly", "Fan Assembly", "20-inch Fan",
"Electrical Unit", "Electrical Unit", "Electrical Unit"),
Level = c(1, 2, 3, 3, 3, 2, 2, 3, 3, 2, 3, 3, 3)  # Hierarchical level
)
# Calculate positions for components
hierarchy$x <- hierarchy$Level
hierarchy$y <- ave(hierarchy$Level, hierarchy$Level, FUN = seq_along)
# Merge positions with arrows
arrows <- merge(arrows, hierarchy, by.x = "From", by.y = "Component", all.x = TRUE)
arrows <- merge(arrows, hierarchy, by.x = "To", by.y = "Component", all.x = TRUE, suffixes = c(".From", ".To"))
# Merge week information into hierarchy
hierarchy <- merge(hierarchy, time_phased, by = "Component")
# Plot
ggplot(hierarchy, aes(x = x, y = y)) +
# Draw nodes
geom_point(aes(color = "blue"), size = 5) +
# Draw labels
geom_text(aes(label = Component), vjust = -1.5, hjust = 0.5) +
# Draw week information
geom_text(aes(label = paste0("Week ", Week_Start, " (", Duration, " wk)")), vjust = 2, hjust = 0.5, size = 3, color = "darkred") +
# Draw arrows
geom_segment(data = arrows, aes(x = x.From, xend = x.To, y = y.From, yend = y.To),
arrow = arrow(length = unit(0.2, "cm")), color = "black") +
# Theme and labels
theme_minimal() +
labs(title = "Hierarchical Product Structure with Weeks", x = "", y = "") +
theme(axis.text = element_blank(), axis.ticks = element_blank(), panel.grid = element_blank()) +
scale_color_identity()
library(ggplot2)
library(ggforce)
# Data for the product structure
time_phased <- data.frame(
Component = c("20-inch Fan", "Housing", "Frame", "Supports", "Handle", "Grills",
"Fan Assembly", "Hub", "Blades", "Electrical Unit", "Motor", "Switch", "Knob"),
Week_Start = c(7, 6, 4, 5, 5, 5, 4, 3, 3, 6, 5, 5, 5),  # Start weeks
Duration = c(1, 1, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1)     # Durations
)
# Define relationships
arrows <- data.frame(
From = c("20-inch Fan", "20-inch Fan", "20-inch Fan", "20-inch Fan",
"Housing", "Housing", "Housing",
"Fan Assembly", "Fan Assembly",
"Electrical Unit", "Electrical Unit", "Electrical Unit"),
To = c("Housing", "Grills", "Fan Assembly", "Electrical Unit",
"Frame", "Supports", "Handle",
"Hub", "Blades",
"Motor", "Switch", "Knob")
)
# Create a hierarchical layout manually
hierarchy <- data.frame(
Component = c("20-inch Fan", "Housing", "Frame", "Supports", "Handle", "Grills",
"Fan Assembly", "Hub", "Blades", "Electrical Unit", "Motor", "Switch", "Knob"),
Parent = c(NA, "20-inch Fan", "Housing", "Housing", "Housing", "20-inch Fan",
"20-inch Fan", "Fan Assembly", "Fan Assembly", "20-inch Fan",
"Electrical Unit", "Electrical Unit", "Electrical Unit"),
Level = c(1, 2, 3, 3, 3, 2, 2, 3, 3, 2, 3, 3, 3)  # Hierarchical level
)
# Merge week information into hierarchy
hierarchy <- merge(hierarchy, time_phased, by = "Component")
# Calculate positions for components
# Use Week_Start for the x-axis to make branch lengths proportional to time
hierarchy$x <- hierarchy$Week_Start
hierarchy$y <- ave(hierarchy$Level, hierarchy$Level, FUN = seq_along)
# Merge positions with arrows
arrows <- merge(arrows, hierarchy, by.x = "From", by.y = "Component", all.x = TRUE)
arrows <- merge(arrows, hierarchy, by.x = "To", by.y = "Component", all.x = TRUE, suffixes = c(".From", ".To"))
# Plot
ggplot(hierarchy, aes(x = x, y = y)) +
# Draw nodes
geom_point(aes(color = "blue"), size = 5) +
# Draw labels
geom_text(aes(label = Component), vjust = -1.5, hjust = 0.5) +
# Draw week information
geom_text(aes(label = paste0("Week ", Week_Start, " (", Duration, " wk)")), vjust = 2, hjust = 0.5, size = 3, color = "darkred") +
# Draw arrows
geom_segment(data = arrows, aes(x = x.From, xend = x.To, y = y.From, yend = y.To),
arrow = arrow(length = unit(0.2, "cm")), color = "black") +
# Theme and labels
theme_minimal() +
labs(title = "Hierarchical Product Structure with Proportional Weeks", x = "Time (Weeks)", y = "") +
theme(axis.text.y = element_blank(), axis.ticks.y = element_blank(), panel.grid.major.y = element_blank()) +
scale_color_identity()
library(ggplot2)
library(ggforce)
# Data for the product structure
time_phased <- data.frame(
Component = c("20-inch Fan", "Housing", "Frame", "Supports", "Handle", "Grills",
"Fan Assembly", "Hub", "Blades", "Electrical Unit", "Motor", "Switch", "Knob"),
Week_Start = c(7, 6, 4, 5, 5, 5, 4, 3, 3, 6, 5, 5, 5),  # Start weeks
Duration = c(1, 1, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1)     # Durations
)
# Define relationships
arrows <- data.frame(
From = c("20-inch Fan", "20-inch Fan", "20-inch Fan", "20-inch Fan",
"Housing", "Housing", "Housing",
"Fan Assembly", "Fan Assembly",
"Electrical Unit", "Electrical Unit", "Electrical Unit"),
To = c("Housing", "Grills", "Fan Assembly", "Electrical Unit",
"Frame", "Supports", "Handle",
"Hub", "Blades",
"Motor", "Switch", "Knob")
)
# Create a hierarchical layout manually
hierarchy <- data.frame(
Component = c("20-inch Fan", "Housing", "Frame", "Supports", "Handle", "Grills",
"Fan Assembly", "Hub", "Blades", "Electrical Unit", "Motor", "Switch", "Knob"),
Parent = c(NA, "20-inch Fan", "Housing", "Housing", "Housing", "20-inch Fan",
"20-inch Fan", "Fan Assembly", "Fan Assembly", "20-inch Fan",
"Electrical Unit", "Electrical Unit", "Electrical Unit"),
Level = c(1, 2, 3, 3, 3, 2, 2, 3, 3, 2, 3, 3, 3)  # Hierarchical level
)
# Merge week information into hierarchy
hierarchy <- merge(hierarchy, time_phased, by = "Component")
# Calculate y positions based on hierarchy
hierarchy$y <- as.numeric(factor(hierarchy$Component, levels = unique(hierarchy$Component)))
# Merge positions with arrows
arrows <- merge(arrows, hierarchy, by.x = "From", by.y = "Component", all.x = TRUE)
arrows <- merge(arrows, hierarchy, by.x = "To", by.y = "Component", all.x = TRUE, suffixes = c(".From", ".To"))
# Plot
ggplot(hierarchy, aes(x = Week_Start, y = y)) +
# Draw horizontal bars for durations
geom_segment(aes(xend = Week_Start + Duration, yend = y),
color = "blue", size = 2, lineend = "round") +
# Draw arrows for dependencies
geom_curve(data = arrows, aes(x = Week_Start.From + Duration.From, xend = Week_Start.To,
y = y.From, yend = y.To),
curvature = 0.2, color = "black", arrow = arrow(length = unit(0.2, "cm"))) +
# Draw labels
geom_text(aes(label = Component), hjust = -0.1, vjust = 0.5, size = 4) +
# Draw week information
geom_text(aes(x = Week_Start + Duration / 2, label = paste0(Duration, " wk")),
vjust = 2, size = 3, color = "darkred") +
# Theme and labels
labs(title = "Gantt-Like Hierarchical Product Structure", x = "Time (Weeks)", y = "") +
theme_minimal() +
theme(axis.text.y = element_blank(), axis.ticks.y = element_blank(),
panel.grid.major.y = element_blank(), panel.grid.minor.y = element_blank())
library(ggplot2)
library(ggforce)
# Data for the product structure
time_phased <- data.frame(
Component = c("20-inch Fan", "Housing", "Frame", "Supports", "Handle", "Grills",
"Fan Assembly", "Hub", "Blades", "Electrical Unit", "Motor", "Switch", "Knob"),
Duration = c(1, 1, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1)  # Durations
)
# Define relationships
arrows <- data.frame(
From = c("20-inch Fan", "20-inch Fan", "20-inch Fan", "20-inch Fan",
"Housing", "Housing", "Housing",
"Fan Assembly", "Fan Assembly",
"Electrical Unit", "Electrical Unit", "Electrical Unit"),
To = c("Housing", "Grills", "Fan Assembly", "Electrical Unit",
"Frame", "Supports", "Handle",
"Hub", "Blades",
"Motor", "Switch", "Knob")
)
# Create a hierarchical layout manually
hierarchy <- data.frame(
Component = c("20-inch Fan", "Housing", "Frame", "Supports", "Handle", "Grills",
"Fan Assembly", "Hub", "Blades", "Electrical Unit", "Motor", "Switch", "Knob"),
Parent = c(NA, "20-inch Fan", "Housing", "Housing", "Housing", "20-inch Fan",
"20-inch Fan", "Fan Assembly", "Fan Assembly", "20-inch Fan",
"Electrical Unit", "Electrical Unit", "Electrical Unit"),
Level = c(1, 2, 3, 3, 3, 2, 2, 3, 3, 2, 3, 3, 3)  # Hierarchical level
)
# Merge duration information into hierarchy
hierarchy <- merge(hierarchy, time_phased, by = "Component")
# Calculate positions for components
# x = cumulative duration based on hierarchy
# y = hierarchical level
hierarchy$x <- ave(hierarchy$Duration, hierarchy$Level, FUN = cumsum)
hierarchy$y <- hierarchy$Level
# Merge positions with arrows
arrows <- merge(arrows, hierarchy, by.x = "From", by.y = "Component", all.x = TRUE)
arrows <- merge(arrows, hierarchy, by.x = "To", by.y = "Component", all.x = TRUE, suffixes = c(".From", ".To"))
# Plot
ggplot(hierarchy, aes(x = x, y = y)) +
# Draw horizontal bars for durations
geom_segment(aes(xend = x + Duration, yend = y),
color = "blue", size = 2, lineend = "round") +
# Draw arrows for dependencies
geom_curve(data = arrows, aes(x = x.From + Duration.From, xend = x.To,
y = y.From, yend = y.To),
curvature = 0.2, color = "black", arrow = arrow(length = unit(0.2, "cm"))) +
# Draw labels
geom_text(aes(label = Component), hjust = -0.1, vjust = 0.5, size = 4) +
# Draw duration information
geom_text(aes(x = x + Duration / 2, label = paste0(Duration, " wk")),
vjust = 2, size = 3, color = "darkred") +
# Theme and labels
labs(title = "Tree-Like Product Structure with Duration as Branch Length",
x = "Cumulative Duration (Weeks)", y = "Hierarchy Level") +
theme_minimal() +
theme(axis.text.y = element_blank(), axis.ticks.y = element_blank(),
panel.grid.major.y = element_blank(), panel.grid.minor.y = element_blank())
# Define input data
components <- data.frame(
Component = c("20-inch Fan", "Housing", "Frame", "Supports", "Handle", "Grills",
"Fan Assembly", "Hub", "Blades", "Electrical Unit", "Motor", "Switch", "Knob"),
LeadTime = c(1, 1, 2, 1, 1, 2, 3, 1, 2, 1, 1, 1, 1),
OnHandInventory = c(100, 100, 0, 50, 400, 200, 150, 0, 0, 0, 0, 20, 12),
LotSize = c(NA, NA, 100, 100, 500, 500, NA, NA, 100, NA, NA, 12, 25),
ScheduledReceipts = c(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 200) # 200 knobs in week 2
)
# Define gross requirements for 1,000 fans
gross_requirements <- data.frame(
Component = components$Component,
GrossRequirements = c(1000, 1000, 1000, 2000, 1000, 2000, 1000, 1000, 5000, 1000, 1000, 1000, 1000)
)
# Calculate net requirements
net_requirements <- merge(components, gross_requirements, by = "Component")
net_requirements$NetRequirements <- pmax(
net_requirements$GrossRequirements - net_requirements$OnHandInventory - net_requirements$ScheduledReceipts,
0
)
# Offset requirements by lead time
net_requirements$OrderReleaseWeek <- 7 - net_requirements$LeadTime
# Create a formatted table
library(knitr)
library(kableExtra)
kable(
net_requirements[, c("Component", "GrossRequirements", "OnHandInventory", "ScheduledReceipts", "NetRequirements", "OrderReleaseWeek")],
col.names = c("Component", "Gross Req.", "On-Hand Inv.", "Sched. Receipts", "Net Req.", "Order Release Week"),
caption = "Net Material Requirements Plan"
) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"), full_width = F)
